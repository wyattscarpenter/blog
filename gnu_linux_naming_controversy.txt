Gentle reader, I will assume you are familiar with the so-called "GNU/Linux naming controversy", on which I will now take a position. If not, please refer to https://en.wikipedia.org/wiki/GNU/Linux_naming_controversy

In the discussions of this topic, an awful lot of consideration has been given to who or what should get "credit". My proposal is radically simpler than this: the operating system(s) in question should be referred to as "GNU" or "GNU/Linux", because that is the only correct naming convention.

Except in some specific contexts, an operating system consists of more things than its kernel. Hence the POSIX standard, which GNU largely implements, is an interface for operating systems which includes a large numbers of specifications and utility programs like ls.

Linux, consisting only of a part of an operating system, is the name of a kernel, not a full operating system. This is amply demonstrated by other (non-GNU) operating systems that use Linux, like Android, and GNU implementations that don't use Linux, like GNU/kFreeBSD or GNU/Hurd (someday...).

Now, on another note, should the operating systems in this family always be referred to as GNU/Linux if they contain both GNU and Linux? Well, they certainly can be, correctly. And, people often thought this was a good distinction to draw because they continued to anticipate the release of the GNU Project's home-grown kernel, Hurd. Perhaps Hurd will one day come to pass. However, in my opinion, GNU is also a permissible name for GNU/Linux systems. The reason is that the relationship between these operating systems is not a rigid, static definition, but a family-resemblence; adding or removing one piece of software, even a significant one, does not make the operating system overwhelmingly different, and so they can both share the name of the same overarching category.

For completeness, and to elucidate the previous claim, I should elaborate on the hierarchy of categorizations used in this space. The top layer, in our consideration, is an operating system, which is a bunch of programs ("parts") bundled together. These include GNU, FreeBSD (and each of the BSD family of operating systems... but characterizing a family of operating systems would be another level of categorization up!), and Microsoft Windows. These operating systems can have versions, which reflects in some way the versions of the programs in the operating system. The operating systems, which are sort of conceptually prototypes or bundles, are collected, collated, and tweaked into distributions, or "distros", which select and substitute programs for delivery to the end-user's machine. These distros can also have versions. An operating system may have one distro or several, as considerations dictate. Distros are often known by their own name, and also the name of the operating system they are derived from. For example, "Debian GNU/Linux". KIn this explanation, it shouldn't what side of the type/token-distinction operating systems are thought to fall on, so long as the other way of talking about them is regarded as a licit figure of speech.)

All that said, are we not exacting practitioners? Are we not servants of techne? Don't we believe in getting things pedantically correct? For these reasons, we should refer to things by the right terms.
