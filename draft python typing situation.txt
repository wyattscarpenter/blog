as you might be aware, Python is dynamically typed, which is computer science jargon for "gives you the type errors at run time, when it is too late to do anything about them"

see this meme with Don Corleone:
https://x.com/mariofusco/status/535111008944402432
"You come to me at runtime to tell me the code you are executing does not compile"

dynamically typed programming languages, another word for "What if we had a void pointer but it took up more space?" were invented later than statically-typed programming languages (sort of), so sometimes people assume they are more advanced and better. The world is slowly waking up from this dogmatic slumber. The king of typing, static, has returned to his throne, and all of the serious software engineers bow to him. Let the jester stand there and say "ah, but you can't statically type a situation where you don't know what type the data's going to be beforehand!" and let the king retort "neither, in such a situation, can you write the code!" and draw from the keen court an even greater laugh. This is also the theme of this other blog post, which was highly formative on my thinking.

I should also include that presentation I gave in college here, but I would have to get my classmates' permission to share it.

so, as you may be able to tell from my verbiage, im a fan of static typing. however, there is the caveat: the static typing has to not be stupid.

in python typing is in its infancy

python typing is not finished, it's in its experimental phase, and therefore A lot of the things you might like to do are not really possible yet.
